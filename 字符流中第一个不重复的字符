/*
请实现一个函数用来找出字符流中第一个只出现一次的字符。例如，当从字符流中只读出前两个字符"go"时，第一个只出现一次的字符是"g"。当从该字符流中读出前六
个字符“google"时，第一个只出现一次的字符是"l"。
输出描述:

如果当前字符流没有存在出现一次的字符，返回#字符。

*/
import java.util.*;
public class Solution {
     ArrayList<Boolean> flag=new ArrayList<>();
    ArrayList<Character> list=new ArrayList<>();
    //Insert one char from stringstream
    public void Insert(char ch)
    {   
    //list存放字符,flag用于存放该字符是否重复对应的true/false
        if(list.contains(ch)){
            int index=list.indexOf(ch);
            flag.remove(index);
            flag.add(index,true);
        }
        else{
            list.add(ch);
            flag.add(false);
        }
        
    }
    //return the first appearence once char in current stringstream
    public char FirstAppearingOnce()
    {
        int index=-1;
        for(int i=0;i<flag.size();i++){
            if(!flag.get(i)){
                index=i;
                break;
            }
        }
        if(index==-1)
            return '#';
        else
            return list.get(index);
    }

}
