/*输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字，例如，如果输入如下4 X 4矩阵： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 则依次打印出数字
1,2,3,4,8,12,16,15,14,13,9,5,6,7,11,10.*/
import java.util.ArrayList;
public class Solution {
    static int col;
    static int row;
    static ArrayList<Integer> array;
    static int[][] matrix;
    public ArrayList<Integer> printMatrix(int [][] matrix) {
        array=new ArrayList<>();
        int row=matrix.length,col=matrix[0].length;
        Solution.col=col;
        Solution.row=row;
        Solution.matrix=matrix;
        print(0);
        return array;    
    }
    public void print(int start){
        if(row<=0||col<=0)
            return;
        //左->右
        for(int i=0;i<col;i++){
            int j=start+i;
            array.add(matrix[start][j]);
        }
        //上->下
        for(int i=0;i<row-1;i++){
            int j=start+1+i;
            array.add(matrix[j][start+col-1]);
        }
        //右->左,行数为1,不存在右->左(不加这一句会重复打印,如12345,应该打印12345,程序打印成 123454321 )
        if(row>1)
          for(int i=0;i<=col-2;i++){   
              int j=start+col-2-i;
              array.add(matrix[start+row-1][j]);
           }
        //下->上,类似右->左
        if(col>1)
          for(int i=0;i<row-2;i++){
              int j=start+row-2-i;
              array.add(matrix[j][start]);
          }
        row-=2;
        col-=2;
        print(start+1);
    }
    
}
