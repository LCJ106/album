/*题目描述
在数组中的两个数字，如果前面一个数字大于后面的数字，则这两个数字组成一个逆序对。输入一个数组,求出这个数组中的逆序对的总数P。并将P对1000000007取模的结果输出。 即输出P%1000000007
输入描述:

题目保证输入的数组中没有的相同的数字

数据范围：

	对于%50的数据,size<=10^4

	对于%75的数据,size<=10^5

	对于%100的数据,size<=2*10^5

示例1
输入
1,2,3,4,5,6,7,0

输出
7

*/

//利用递归排序
public class Solution {
    int count;
    public int InversePairs(int[] array){
        int[] copy=new int[array.length];
        sort(0,array.length-1,array,copy);
        return  count;
    }
    public void sort(int start,int end,int[] array,int[] copy){
        if(start==end)
            return ;
        int mid=(start+end)/2;
        sort(start,mid,array,copy);
        sort(mid+1,end,array,copy);
        merge(start,mid,end,array,copy);
    }
    public void merge(int start,int mid,int end,int[] array,int[] copy){
        int m=mid,n=end;
        for(int i=end;i>=start;i--){
            copy[i]=array[i];
        }
        for(int i=end;i>=start;i--){
            if(m<start)
                array[i]=copy[n--];
            else if(n<=mid){
                array[i]=copy[m--];
            }
            else if(copy[m]>copy[n]){
                count=(count+(n-mid)%1000000007)%1000000007;
                array[i]=copy[m--];
            }
            else
                array[i]=copy[n--];
        }
    }
}
